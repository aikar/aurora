/*** Generated by streamline 0.1.44 - DO NOT EDIT ***/
var __g=typeof global!=='undefined'?global:window;__g=(__g.__streamline||(__g.__streamline={}));__g.setEF=__g.setEF||function(e,f){e.__frame = e.__frame||f};var __srcName='streamline/examples/streams/googleClient_.js';
function __func(_, __this, __arguments, fn, index, frame, body){ if (!_) { return __future.call(__this, fn, __arguments, index); } frame.file = __srcName; frame.prev = __g.frame; __g.frame = frame; try { body(); } catch (e) { __g.setEF(e, frame.prev); __propagate(_, e); } finally { __g.frame = frame.prev; } }
function __cb(_, frame, offset, col, fn){ frame.offset = offset; frame.col = col; var ctx = __g.context; return function ___(err, result){ var oldFrame = __g.frame; __g.frame = frame; __g.context = ctx; try { if (err) { __g.setEF(err, frame); return _(err); } return fn(null, result); } catch (ex) { __g.setEF(ex, frame); return __propagate(_, ex); } finally { __g.frame = oldFrame; } } }
function __future(fn, args, i){ var done, err, result; var cb = function(e, r){ done = true; err = e, result = r; }; args = Array.prototype.slice.call(args); args[i] = function ___(e, r){ cb(e, r); }; fn.apply(this, args); return function ___(_){ if (done) _.call(this, err, result); else cb = _.bind(this); } .bind(this); }
function __propagate(_, err){ try { _(err); } catch (ex) { __trap(ex); } }
function __trap(err){ if (err) { if (__g.context && __g.context.errorHandler) __g.context.errorHandler(err); else console.error("UNCAUGHT EXCEPTION: " + err.message + "\n" + err.stack); } }
function __tryCatch(_, fn){ try { fn(); } catch (e) { try { _(e); } catch (ex) { __trap(ex); } } }
            (function main(_) {
              var streams, str, result, formatted;
/*    10 */   function google(str, _) {
                var req, resp;
                var __frame = {
                  name: "google",
                  line: 10
                };
                return __func(_, this, arguments, google, 1, __frame, function __$google() {
/*    16 */       req = streams.httpRequest({
/*    17 */         url: ("http://ajax.googleapis.com/ajax/services/search/web?v=1.0&q=" + str),
/*    18 */         proxy: process.env.http_proxy
                  });
/*    25 */       return req.end().response(__cb(_, __frame, 15, 12, function ___(__0, __1) {
                    resp = __1;
/*    27 */         return resp.checkStatus(200).readAll(__cb(_, __frame, 17, 19, function ___(__0, __3) {
/*    27 */           var __2 = JSON.parse(__3);
                      return _(null, __2);
                    }));
                  }));
                });
              };
              var __frame = {
                name: "main",
                line: 1
              };
              return __func(_, this, arguments, main, 0, __frame, function __$main() {
/*     8 */     streams = require("streamline/lib/streams/server/streams");
                return (function ___(__then) {
                  (function ___(_) {
                    __tryCatch(_, function __$main() {
/*    32 */           str = ((process.argv.length > 2) ? process.argv[2] : "node.js");
/*    35 */           return google(str, __cb(_, __frame, 34, 14, function ___(__0, __1) {
                        result = __1;
/*    40 */             formatted = result.responseData.results.map(function(entry) {
/*    39 */               return ((entry.url + "\n	") + entry.titleNoFormatting);
/*    40 */             }).join("\n");
/*    41 */             console.log(formatted);
                        __then();
                      }));
                    });
                  })(function ___(ex, __result) {
                    __tryCatch(_, function __$main() {
                      if (ex) {
/*    44 */             console.error(ex.stack);
                        __then();
                      }
                       else {
                        _(null, __result);
                      }
                    ;
                    });
                  });
                })(function ___() {
                  __tryCatch(_, _);
                });
              });
            }).call(this, __trap);
